name: Deploy

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Build Frontend
        run: |
          cd frontend
          npm install
          npm run build

      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: 22
          script_stop: true
          command_timeout: 30m
          script: |
            echo "Starting deployment..."
            
            # Устанавливаем nvm и Node.js если их нет
            if [ ! -d "$HOME/.nvm" ]; then
              echo "Installing nvm and Node.js..."
              curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash
              export NVM_DIR="$HOME/.nvm"
              [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
              [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"
              nvm install 18
            fi
            
            # Активируем Node.js 18
            echo "Activating Node.js 18..."
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            nvm use 18
            
            # Проверяем и создаем директории если нужно
            PROJECT_DIR="/home/$USER/nms2"
            if [ ! -d "$PROJECT_DIR" ]; then
              echo "Creating project directory..."
              mkdir -p "$PROJECT_DIR"
              cd "$PROJECT_DIR"
              git clone https://github.com/supernarkis/nms2.git .
            else
              echo "Updating existing project..."
              cd "$PROJECT_DIR"
              git fetch origin
              git reset --hard origin/main
            fi
            
            # Проверяем виртуальное окружение
            if [ ! -d "env" ]; then
              echo "Creating virtual environment..."
              python3 -m venv env
            fi
            
            # Обновляем бэкенд
            echo "Updating backend..."
            source env/bin/activate
            pip install -r requirements.txt
            
            # Перезапускаем сервис
            echo "Restarting service..."
            if sudo systemctl is-active --quiet notes-app; then
              sudo systemctl restart notes-app
            else
              echo "Warning: notes-app service is not active"
              sudo systemctl start notes-app
            fi
            
            # Собираем и обновляем фронтенд
            echo "Building frontend..."
            cd frontend
            npm install
            npm run build
            
            # Обновляем файлы на веб-сервере
            echo "Updating web server files..."
            if [ -d "dist" ]; then
              sudo rm -rf /var/www/html/*
              sudo cp -r dist/* /var/www/html/
              sudo chown -R www-data:www-data /var/www/html/
              echo "Deployment completed successfully!"
            else
              echo "Error: dist directory not found!"
              exit 1
            fi 